from flask import Flask, request
from config import Config
from extensions import db
from routes import main
import logging
import os
from werkzeug.middleware.proxy_fix import ProxyFix
from flask_cors import CORS

def create_app():
    app = Flask(__name__)
    app.config.from_object(Config)

    # ProxyFix –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è IP –∑–∞ –ø—Ä–æ–∫—Å–∏
    app.wsgi_app = ProxyFix(app.wsgi_app, x_for=1, x_proto=1)

    # –í–∫–ª—é—á–∞–µ–º CORS –¥–ª—è –≤—Å–µ—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ –∏ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥-–¥–æ–º–µ–Ω–æ–≤
    CORS(app, origins=[
        "http://localhost:3000",
        "http://127.0.0.1:3000",
        "http://192.168.2.101:3000",
        # –î–æ–±–∞–≤—å—Ç–µ —Å—é–¥–∞ –¥—Ä—É–≥–∏–µ –¥–æ–º–µ–Ω—ã, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    ])

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
    db.init_app(app)

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    if not os.path.exists("logs"):
        os.mkdir("logs")
    logging.basicConfig(
        filename="logs/app.log",
        level=logging.DEBUG,
        format="%(asctime)s %(levelname)s: %(message)s [in %(pathname)s:%(lineno)d]"
    )
    app.logger.info("üîß Flask app initialized")

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è Blueprint
    app.register_blueprint(main)

    with app.app_context():
        db.create_all()
        app.logger.info("üì¶ Database tables created")

    return app

if __name__ == "__main__":
    app = create_app()
    app.run(host="0.0.0.0", port=5000, debug=True)
